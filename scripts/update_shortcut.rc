#!/usr/bin/env bash



helloearth(){
  echo /home/logic/_workspace/preactjs-playlist/scripts/update_shortcut.rc
}

<<<<<<< HEAD
update_shortcut(){
  OWD=$PWD
  cd /home/logic/_workspace/js-playlist
  cp ./.env /tmp/.env

python3 << END
import os,sys
import subprocess
import shlex
import re
from pprint import pprint

new_command_template='''
new_from_##PROJ_NAME##(){
  new_from ##PROJ_DIR_NAME##

  ./init.sh
}
'''

def simple_replace(x):
  output = re.sub( '##PROJ_NAME##', x.replace('-','_'), new_command_template,
    flags=re.MULTILINE)

  output = re.sub( '##PROJ_DIR_NAME##', x, output,
    flags=re.MULTILINE)

  return output

dirs = subprocess.check_output(shlex.split('ls -1')).decode('utf-8').split('\n')
tryout_dirs = list(filter(lambda x: x.find('-tryout') > 0, dirs))

print('tryout_dirs found:')
pprint(tryout_dirs)
=======
update_tryout_shortcut(){
  TMP_DIR=$(mktemp -d)
  PY_CONTENT=$(cat scripts/update_shortcut.py)
>>>>>>> origin/develop

  rsync -avzh ./.env $TMP_DIR/.env

  python3 scripts/update_shortcut.py $TMP_DIR/.env

  rsync -avzh $TMP_DIR/.env ./.env

}

update_scripts(){
  SCRIPT_FILE=$(realpath $0)
  PROJ_HOME=$(dirname $SCRIPT_FILE)
  MASTER_GITHUB_PROJ_HOME='/home/logic/_workspace/github-playlist'

  rsync -avzh $MASTER_GITHUB_PROJ_HOME/scripts/update_shortcut.py $PROJ_HOME/scripts

  rsync -avzh $MASTER_GITHUB_PROJ_HOME/scripts/update_shortcut.rc $PROJ_HOME/scripts

  rsync -avzh $PROJ_HOME/scripts/update_shortcut.py $MASTER_GITHUB_PROJ_HOME/scripts

  rsync -avzh $PROJ_HOME/scripts/update_shortcut.py $MASTER_GITHUB_PROJ_HOME/scripts

  cd && cd -

}

new_from(){
  set -x

  rm -rf * &
  rm -rf .* &
  wait

  TEST=`echo $PWD|rev |cut -d'/' -f1 |rev`
  # git branch -D test/$TEST
  # git checkout -b test/$TEST

  rsync -avzh --exclude node_modules --exclude .cache --exclude public ../$1/ .

}

helloworld(){
  echo 'helloworld'
}
