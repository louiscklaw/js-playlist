#!/usr/bin/env bash

helloearth(){
  echo /home/logic/_workspace/preactjs-playlist/scripts/update_shortcut.rc
}

update_shortcut(){
  OWD=$PWD
  cd /home/logic/_workspace/js-playlist
  TMP_DIR=$(mktemp -d)
  cp ./.env $TMP_DIR/.env

python3 << END
import os,sys
import subprocess
import shlex
import re
from pprint import pprint

new_command_template='''
new_from_##PROJ_NAME##(){
  new_from ##PROJ_DIR_NAME##

  ./init.sh
}
'''

def simple_replace(x):
  output = re.sub( '##PROJ_NAME##', x.replace('-','_'), new_command_template,
    flags=re.MULTILINE)

  output = re.sub( '##PROJ_DIR_NAME##', x, output,
    flags=re.MULTILINE)

  return output

dirs = subprocess.check_output(shlex.split('ls -1')).decode('utf-8').split('\n')
tryout_dirs = list(filter(lambda x: x.find('-tryout') > 0, dirs))

print('tryout_dirs found:')
pprint(tryout_dirs)

new_commands_content = map( lambda x: simple_replace(x), tryout_dirs)

start_string = '''
# update_by_dir_start
#/home/logic/_workspace/preactjs-playlist/scripts/update_shortcut.rc
'''

end_string = '# update_by_dir_end'

new_commands_content=list(new_commands_content)+[
  '''testing_shortcut(){
  echo testing_shortcut
}
'''
]

new_commands_string='\n'.join(
  [start_string]+list(new_commands_content)+[end_string]
  )


temp = ''
dot_env_on_tmp='$TMP_DIR/.env'

with open(dot_env_on_tmp,'r') as fi:
  temp = ''.join(fi.readlines())
  temp = re.sub(r'# update_by_dir_start.+?# update_by_dir_end',
    new_commands_string,
    temp, count=1,flags=re.MULTILINE|re.DOTALL)

with open(dot_env_on_tmp,'w') as fo:
  fo.writelines(temp)

END

  cp $TMP_DIR/.env ./.env

  cd $OWD
}

new_from(){
  set -x

  rm -rf * &
  rm -rf .* &
  wait

  TEST=`echo $PWD|rev |cut -d'/' -f1 |rev`
  # git branch -D test/$TEST
  # git checkout -b test/$TEST

  rsync -avzh --exclude node_modules --exclude .cache --exclude public ../$1/ .

}

helloworld(){
  echo 'helloworld'
}
